
#user nobody nogroup;
user www www;
worker_processes  2;

#worker_rlimit_nofile 1024;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

error_log	/dev/null	crit;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
    use                 epoll;
}


http {
    access_log      off;

    include       mime.types;
    #default_type  application/octet-stream;
    tcp_nopush                      off;
    tcp_nodelay                     on;
    send_timeout                    10;
    server_tokens 		    off;
    client_body_timeout             10;
    client_header_timeout           10;
    client_header_buffer_size       10k;
    large_client_header_buffers     2 10k;
    client_max_body_size            15m;
    client_body_buffer_size         8k;
    ignore_invalid_headers          on;
    output_buffers 		    1 16k;
    postpone_output 		    1460;
    
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 8k;
    fastcgi_buffers 4 8k;
    fastcgi_busy_buffers_size 8k;
    fastcgi_temp_file_write_size 8k;
    fastcgi_intercept_errors on;

    push_stream_shared_memory_size              2m;
    push_stream_max_channel_id_length           128;
    # max messages to store in memory
    push_stream_max_messages_stored_per_channel  20;
    # message ttl
    push_stream_message_ttl                      5m;
    # ping frequency
    push_stream_ping_message_interval           10s;
    # connection ttl to enable recycle
    push_stream_subscriber_connection_ttl        15m;
    # connection ttl for long polling
    push_stream_longpolling_connection_ttl        30s;
    push_stream_timeout_with_body                 off;
    # broadcast wildcard
    push_stream_wildcard_channel_prefix         "broad_";
    push_stream_wildcard_channel_max_qtd        3;

    push_stream_message_template                "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":\"~text~\", \"tag\":\"~tag~\", \"time\":\"~time~\", \"eventid\":\"~event-id~\"}";
    # subscriber may create channels on demand or only authorized
    # (publisher) may do it?
    push_stream_authorized_channels_only        off;
    push_stream_allowed_origins                 "*";

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  10;

    #gzip  on;

   include /etc/nginx/conf.d/main.conf;
   include /etc/nginx/conf.d/sub*.conf;
   
}
