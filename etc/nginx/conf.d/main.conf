    server {
        listen       80;
        server_name  m.wipark.cn u.wipark.cn; 
        root   /wiware/www;
	add_header 'Access-Control-Allow-Origin' '*';

        location / {
            index  index.pl index.cgi index.html index.htm index.php;
            limit_rate 400k;
        }
        
        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path		$arg_id;
        }

        location /pub {
            # activate publisher mode for this location, with admin support
            push_stream_publisher admin;

            # query string based channel id
	    push_stream_channels_path               $arg_id;

            # store messages in memory
            push_stream_store_messages              on;

            # push_stream_keepalive                   on;

            # Message size limit
            # client_max_body_size MUST be equal to client_body_buffer_size or
            # you will be sorry.
            client_max_body_size                    16k;
            client_body_buffer_size                 16k;
        }

        location ~ /sub/(.*) {
            # activate subscriber mode for this location
            push_stream_subscriber;

            # positional channel path
	    push_stream_channels_path                   $1;

            # header to be sent when receiving new subscriber connection
	    push_stream_header_template                 "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta http-equiv=\"Cache-Control\" content=\"no-store\">\r\n<meta http-equiv=\"Cache-Control\" content=\"no-cache\">\r\n<meta http-equiv=\"Pragma\" content=\"no-cache\">\r\n<meta http-equiv=\"Expires\" content=\"Thu, 1 Jan 1970 00:00:00 GMT\">\r\n<script type=\"text/javascript\">\r\nwindow.onError = null;\r\ntry{ document.domain = (window.location.hostname.match(/^(\d{1,3}\.){3}\d{1,3}$/)) ? window.location.hostname : window.location.hostname.split('.').slice(-1 * Math.max(window.location.hostname.split('.').length - 1, (window.location.hostname.match(/(\w{4,}\.\w{2}|\.\w{3,})$/) ? 2 : 3))).join('.');}catch(e){}\r\nparent.PushStream.register(this);\r\n</script>\r\n</head>\r\n<body>";

            # message template
	    push_stream_message_template                "<script>p(~id~,'~channel~','~text~','~event-id~', '~time~', '~tag~');</script>";
            # footer to be sent when finishing subscriber connection
            push_stream_footer_template                 "</body></html>";
            # content-type
	    default_type                                "text/html; charset=utf-8";
	    if ($arg_qs = "on") {
              push_stream_last_received_message_time "$arg_time";
              push_stream_last_received_message_tag  "$arg_tag";
              push_stream_last_event_id              "$arg_eventid";
            }
        }

        location ~ /ev/(.*) {
            # activate subscriber mode for this location
            # activate event source support for this location
	    push_stream_subscriber eventsource;

            # positional channel path
	    push_stream_channels_path                   $1;

	    if ($arg_qs = "on") {
              push_stream_last_received_message_time "$arg_time";
              push_stream_last_received_message_tag  "$arg_tag";
              push_stream_last_event_id              "$arg_eventid";
            }
	   
        }

        location ~ /lp/(.*) {
            # activate long-polling mode for this location
            push_stream_subscriber      long-polling;

            # positional channel path
            push_stream_channels_path    $1;
	    if ($arg_qs = "on") {
              push_stream_last_received_message_time "$arg_time";
              push_stream_last_received_message_tag  "$arg_tag";
              push_stream_last_event_id              "$arg_eventid";
            }
        }

	location ~ /jsonp/(.*) {
            # activate long-polling mode for this location
            push_stream_subscriber      long-polling;

            push_stream_last_received_message_time "$arg_time";
            push_stream_last_received_message_tag  "$arg_tag";
            push_stream_last_event_id              "$arg_eventid";

            # positional channel path
            push_stream_channels_path         $1;
        }

        location ~ /ws/(.*) {
            # activate websocket mode for this location
            push_stream_subscriber websocket;

            # positional channel path
            push_stream_channels_path                   $1;

            # store messages in memory
            push_stream_store_messages              on;

            push_stream_websocket_allow_publish     on;

            if ($arg_qs = "on") {
              push_stream_last_received_message_time "$arg_time";
              push_stream_last_received_message_tag  "$arg_tag";
              push_stream_last_event_id              "$arg_eventid";
            }
        }

	error_page 404 = /index.pl;

        # redirect server error pages to the static page /50x.html
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
        
        location ~ .*\.(pl|cgi|php|php5)?$  {
             include fastcgi.conf;
             fastcgi_pass    127.0.0.1:9009;
        }
                                                                                      

    }
